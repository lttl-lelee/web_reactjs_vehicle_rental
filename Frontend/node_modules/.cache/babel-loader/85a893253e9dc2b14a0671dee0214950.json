{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst token = cookies.get('token');\nconst userSlice = createSlice({\n  name: 'logged',\n  initialState: {\n    status: 'idle',\n    data: token,\n    error: {},\n    show: false\n  },\n  reducers: {\n    logout: state => {\n      cookies.remove('token', {\n        path: '/'\n      });\n      state.data = null;\n    },\n    login: (state, action) => {\n      const res = action.payload;\n      const token = {\n        accessToken: res.accessToken,\n        fullName: res.fullName,\n        avatarLink: res.avatarLink,\n        role: res.role,\n        emailVerify: res.emailVerify\n      };\n      state.data = token;\n      cookies.set(\"token\", token, {\n        path: \"/\",\n        maxAge: 3153600000\n      });\n    },\n    verifySuccess: state => {\n      const token = state.data;\n      token.emailVerify = true;\n      cookies.set(\"token\", token, {\n        path: \"/\",\n        maxAge: 3153600000\n      });\n    },\n    showLogin: state => {\n      state.show = true;\n    },\n    closeLogin: state => {\n      state.show = false;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = userSlice;\nexport const {\n  showLogin,\n  closeLogin,\n  logout,\n  login,\n  verifySuccess\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["D:/hihi/senior-project/web/src/app/slice/userSlice.js"],"names":["createSlice","Cookies","cookies","token","get","userSlice","name","initialState","status","data","error","show","reducers","logout","state","remove","path","login","action","res","payload","accessToken","fullName","avatarLink","role","emailVerify","set","maxAge","verifySuccess","showLogin","closeLogin","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;AAEA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,QADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,IAAI,EAAEN,KAAxB;AAA+BO,IAAAA,KAAK,EAAE,EAAtC;AAA0CC,IAAAA,IAAI,EAAC;AAA/C,GAFY;AAG1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAGC,KAAD,IAAW;AACfZ,MAAAA,OAAO,CAACa,MAAR,CAAe,OAAf,EAAwB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAxB;AACAF,MAAAA,KAAK,CAACL,IAAN,GAAa,IAAb;AACH,KAJK;AAKNQ,IAAAA,KAAK,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACtB,YAAMC,GAAG,GAAGD,MAAM,CAACE,OAAnB;AACA,YAAMjB,KAAK,GAAG;AACVkB,QAAAA,WAAW,EAAEF,GAAG,CAACE,WADP;AAEVC,QAAAA,QAAQ,EAAEH,GAAG,CAACG,QAFJ;AAGVC,QAAAA,UAAU,EAAEJ,GAAG,CAACI,UAHN;AAIVC,QAAAA,IAAI,EAAEL,GAAG,CAACK,IAJA;AAKVC,QAAAA,WAAW,EAAEN,GAAG,CAACM;AALP,OAAd;AAOAX,MAAAA,KAAK,CAACL,IAAN,GAAaN,KAAb;AACAD,MAAAA,OAAO,CAACwB,GAAR,CAAY,OAAZ,EAAqBvB,KAArB,EAA4B;AAAEa,QAAAA,IAAI,EAAE,GAAR;AAAaW,QAAAA,MAAM,EAAE;AAArB,OAA5B;AAEH,KAjBK;AAkBNC,IAAAA,aAAa,EAAGd,KAAD,IAAW;AACtB,YAAMX,KAAK,GAAGW,KAAK,CAACL,IAApB;AACAN,MAAAA,KAAK,CAACsB,WAAN,GAAoB,IAApB;AACAvB,MAAAA,OAAO,CAACwB,GAAR,CAAY,OAAZ,EAAqBvB,KAArB,EAA4B;AAAEa,QAAAA,IAAI,EAAE,GAAR;AAAaW,QAAAA,MAAM,EAAE;AAArB,OAA5B;AACH,KAtBK;AAuBNE,IAAAA,SAAS,EAAGf,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACH,IAAN,GAAW,IAAX;AACH,KAzBK;AA0BNmB,IAAAA,UAAU,EAAGhB,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACH,IAAN,GAAW,KAAX;AACH;AA5BK;AAHgB,CAAD,CAA7B;AAmCA,MAAM;AAAEoB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuB3B,SAA7B;AACA,OAAO,MAAM;AAACwB,EAAAA,SAAD;AAAWC,EAAAA,UAAX;AAAuBjB,EAAAA,MAAvB;AAA+BI,EAAAA,KAA/B;AAAsCW,EAAAA;AAAtC,IAAwDI,OAA9D;AACP,eAAeD,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconst token = cookies.get('token');\r\n\r\nconst userSlice = createSlice({\r\n    name: 'logged',\r\n    initialState: { status: 'idle', data: token, error: {}, show:false },\r\n    reducers: {\r\n        logout: (state) => {\r\n            cookies.remove('token', { path: '/' });\r\n            state.data = null;\r\n        },\r\n        login: (state, action) => {\r\n            const res = action.payload;\r\n            const token = {\r\n                accessToken: res.accessToken,\r\n                fullName: res.fullName,\r\n                avatarLink: res.avatarLink,\r\n                role: res.role,\r\n                emailVerify: res.emailVerify\r\n            }\r\n            state.data = token;\r\n            cookies.set(\"token\", token, { path: \"/\", maxAge: 3153600000 });\r\n\r\n        },\r\n        verifySuccess: (state) => {\r\n            const token = state.data;\r\n            token.emailVerify = true;\r\n            cookies.set(\"token\", token, { path: \"/\", maxAge: 3153600000 });\r\n        },\r\n        showLogin: (state) => {\r\n            state.show=true;\r\n        },\r\n        closeLogin: (state) => {\r\n            state.show=false;\r\n        },\r\n\r\n    },\r\n})\r\nconst { reducer, actions } = userSlice;\r\nexport const {showLogin,closeLogin, logout, login, verifySuccess } = actions;\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}