{"ast":null,"code":"import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from 'react-overlays/Modal';\nimport BootstrapModalManager from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet manager;\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null); // TODO: what's this type\n\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (!manager) manager = new BootstrapModalManager();\n    return manager;\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().isContainerOverflowing(modal);\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in react-overlays,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, ...args) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExit = (node, ...args) => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node, ...args);\n  };\n\n  const handleEntering = (node, ...args) => {\n    onEntering == null ? void 0 : onEntering(node, ...args); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(...args); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      containerClassName: `${bsPrefix}-open`,\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","map":{"version":3,"sources":["D:/hihi/senior-project/web/node_modules/react-bootstrap/esm/Modal.js"],"names":["classNames","addEventListener","canUseDOM","ownerDocument","removeEventListener","getScrollbarSize","useCallbackRef","useEventCallback","useMergedRefs","useWillUnmount","transitionEnd","React","useCallback","useMemo","useRef","useState","BaseModal","BootstrapModalManager","Fade","ModalBody","ModalContext","ModalDialog","ModalFooter","ModalHeader","ModalTitle","useBootstrapPrefix","jsx","_jsx","manager","defaultProps","show","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","props","BackdropTransition","Modal","forwardRef","bsPrefix","className","style","dialogClassName","contentClassName","children","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","ref","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","handleHide","modalContext","getModalManager","updateDialogStyle","node","containerIsOverflowing","isContainerOverflowing","modalIsOverflowing","scrollHeight","documentElement","clientHeight","paddingRight","undefined","paddingLeft","handleWindowResize","dialog","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","handleStaticBackdropClick","currentTarget","handleClick","handleEscapeKeyDown","preventDefault","handleEnter","args","display","handleExit","handleEntering","handleExited","renderBackdrop","backdropProps","baseModalStyle","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Provider","value","containerClassName","transition","backdropTransition","displayName","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from 'react-overlays/Modal';\nimport BootstrapModalManager from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet manager;\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null); // TODO: what's this type\n\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (!manager) manager = new BootstrapModalManager();\n    return manager;\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().isContainerOverflowing(modal);\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in react-overlays,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, ...args) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExit = (node, ...args) => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node, ...args);\n  };\n\n  const handleEntering = (node, ...args) => {\n    onEntering == null ? void 0 : onEntering(node, ...args); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(...args); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      containerClassName: `${bsPrefix}-open`,\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"]},"metadata":{},"sourceType":"module"}