{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst vehicle = {\n  id: 0,\n  deliveryEnable: false,\n  deliveryFee: 5000,\n  deliveryRadius: 5,\n  deliveryRadiusFree: 5,\n  description: \"\",\n  discountEnable: false,\n  fuelConsumption: 0,\n  fuelType: \"Xăng\",\n  images: null,\n  licensePlates: \"\",\n  limitEnable: false,\n  limitDistance: 100,\n  location: null,\n  mainImg: \"\",\n  model: {\n    id: 0\n  },\n  originPrice: 0,\n  outLimitFee: 1000,\n  yom: \"2017\"\n};\nconst bike = {\n  bikeType: \"Xe số\"\n};\nconst car = {\n  carType: 1,\n  transmission: \"Số tự động\",\n  gps: false,\n  reverseCamera: false,\n  bluetooth: false,\n  usb: false,\n  driver: false\n};\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState: {\n    status: 'idle',\n    data: {},\n    type: \"0\",\n    error: [],\n    images: []\n  },\n  reducers: {\n    changeType: (state, action) => {\n      const type = action.payload;\n\n      if (type === \"bike\") {\n        state.data = { ...vehicle,\n          ...bike\n        };\n      } else if (type === \"car\") {\n        state.data = { ...vehicle,\n          ...car\n        };\n      } else if (type === \"withDriver\") {\n        state.data = { ...vehicle,\n          ...car\n        };\n        state.data.driver = true;\n      }\n\n      state.type = type;\n    },\n    validate: (state, action) => {\n      state.error = action.payload;\n    },\n    validateOk: state => {\n      state.error = [];\n    },\n    changeLicensePlates: (state, action) => {\n      state.data.licensePlates = action.payload;\n\n      if (action.payload !== \"\") {\n        state.error = state.error.filter(item => {\n          return item !== \"licensePlates\";\n        });\n      }\n    },\n    changeModel: (state, action) => {\n      state.data.model = action.payload;\n\n      if (action.payload.id !== 0) {\n        state.data.originPrice = action.payload.suggestPrice;\n        state.error = state.error.filter(item => {\n          return item !== \"model\";\n        });\n      }\n    },\n    changeFuelConsumption: (state, action) => {\n      state.data.fuelConsumption = action.payload;\n\n      if (action.payload !== 0) {\n        state.error = state.error.filter(item => {\n          return item !== \"fuelConsumption\";\n        });\n      }\n    },\n    changeLocation: (state, action) => {\n      state.data.location = action.payload;\n\n      if (action.payload !== null) {\n        state.error = state.error.filter(item => {\n          return item !== \"fuelConsumption\";\n        });\n      }\n    },\n    changePrice: (state, action) => {\n      state.data.originPrice = +action.payload;\n\n      if (action.payload !== \"\") {\n        state.error = state.error.filter(item => {\n          return item !== \"originPrice\";\n        });\n      }\n    },\n    changeData: (state, action) => {\n      const name = action.payload.name;\n      const data = action.payload.data;\n      state.data.name = data;\n    },\n    addImage: (state, action) => {\n      state.images.push(action.payload);\n    },\n    removeImage: (state, action) => {\n      state.images.splice(action.payload, 1);\n    },\n    setMainImg: (state, action) => {\n      state.images.forEach((item, index) => {\n        if (item.mainImg) {\n          item.mainImg = false;\n        }\n\n        if (index === action.payload) {\n          item.mainImg = true;\n        }\n      });\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = registerSlice;\nexport const {\n  changePrice,\n  changeLocation,\n  setMainImg,\n  removeImage,\n  addImage,\n  changeFuelConsumption,\n  changeData,\n  changeType,\n  validate,\n  validateOk,\n  changeLicensePlates,\n  changeModel\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["D:/hihi/senior-project/Frontend/src/app/slice/registerSlice.js"],"names":["createSlice","vehicle","id","deliveryEnable","deliveryFee","deliveryRadius","deliveryRadiusFree","description","discountEnable","fuelConsumption","fuelType","images","licensePlates","limitEnable","limitDistance","location","mainImg","model","originPrice","outLimitFee","yom","bike","bikeType","car","carType","transmission","gps","reverseCamera","bluetooth","usb","driver","registerSlice","name","initialState","status","data","type","error","reducers","changeType","state","action","payload","validate","validateOk","changeLicensePlates","filter","item","changeModel","suggestPrice","changeFuelConsumption","changeLocation","changePrice","changeData","addImage","push","removeImage","splice","setMainImg","forEach","index","reducer","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst vehicle = {\r\n    id: 0,\r\n    deliveryEnable: false,\r\n    deliveryFee: 5000,\r\n    deliveryRadius: 5,\r\n    deliveryRadiusFree: 5,\r\n    description: \"\",\r\n    discountEnable: false,\r\n    fuelConsumption: 0,\r\n    fuelType: \"Xăng\",\r\n    images: null,\r\n    licensePlates: \"\",\r\n    limitEnable: false,\r\n    limitDistance: 100,\r\n    location: null,\r\n    mainImg: \"\",\r\n    model: { id: 0 },\r\n    originPrice: 0,\r\n    outLimitFee: 1000,\r\n    yom: \"2017\",\r\n}\r\nconst bike = {\r\n    bikeType: \"Xe số\",\r\n}\r\nconst car = {\r\n    carType: 1,\r\n    transmission: \"Số tự động\",\r\n    gps: false,\r\n    reverseCamera: false,\r\n    bluetooth: false,\r\n    usb: false,\r\n    driver: false,\r\n}\r\nconst registerSlice = createSlice({\r\n    name: 'register',\r\n    initialState: { status: 'idle', data: {}, type: \"0\", error: [], images: [] },\r\n    reducers: {\r\n        changeType: (state, action) => {\r\n            const type = action.payload;\r\n            if (type === \"bike\") {\r\n                state.data = { ...vehicle, ...bike };\r\n            } else if (type === \"car\") {\r\n                state.data = { ...vehicle, ...car };\r\n            } else if (type === \"withDriver\") {\r\n                state.data = { ...vehicle, ...car };\r\n                state.data.driver = true;\r\n            }\r\n            state.type = type;\r\n        },\r\n        validate: (state, action) => {\r\n            state.error = action.payload;\r\n        },\r\n        validateOk: (state) => {\r\n            state.error = [];\r\n        },\r\n        changeLicensePlates: (state, action) => {\r\n            state.data.licensePlates = action.payload;\r\n            if (action.payload !== \"\") {\r\n                state.error = state.error.filter((item) => { return item !== \"licensePlates\" });\r\n            }\r\n        },\r\n        changeModel: (state, action) => {\r\n            state.data.model = action.payload;\r\n            if (action.payload.id !== 0) {\r\n                state.data.originPrice = action.payload.suggestPrice;\r\n                state.error = state.error.filter((item) => { return item !== \"model\" });\r\n            }\r\n        },\r\n        changeFuelConsumption: (state, action) => {\r\n            state.data.fuelConsumption = action.payload;\r\n            if (action.payload !== 0) {\r\n                state.error = state.error.filter((item) => { return item !== \"fuelConsumption\" });\r\n            }\r\n        },\r\n        changeLocation: (state, action) => {\r\n            state.data.location = action.payload;\r\n            if (action.payload !== null) {\r\n                state.error = state.error.filter((item) => { return item !== \"fuelConsumption\" });\r\n            }\r\n        },\r\n        changePrice: (state, action) => {\r\n            state.data.originPrice = +action.payload;\r\n            if (action.payload !== \"\") {\r\n                state.error = state.error.filter((item) => { return item !== \"originPrice\" });\r\n            }\r\n        },\r\n        changeData: (state, action) => {\r\n            const name = action.payload.name;\r\n            const data = action.payload.data;\r\n            state.data.name = data;\r\n        },\r\n        addImage: (state, action) => {\r\n            state.images.push(action.payload);\r\n        },\r\n        removeImage: (state, action) => {\r\n            state.images.splice(action.payload,1);\r\n        },\r\n        setMainImg: (state, action) => {\r\n            state.images.forEach((item,index) => {\r\n                if(item.mainImg){\r\n                    item.mainImg=false;\r\n                }\r\n                if(index===action.payload){\r\n                    item.mainImg=true;\r\n                }\r\n            });\r\n        },\r\n\r\n    },\r\n})\r\nconst { reducer, actions } = registerSlice;\r\nexport const {changePrice,changeLocation,setMainImg,removeImage,addImage, changeFuelConsumption, changeData, changeType, validate, validateOk, changeLicensePlates, changeModel } = actions;\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}