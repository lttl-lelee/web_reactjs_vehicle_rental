{"ast":null,"code":"import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from 'react-overlays/Overlay';\nimport safeFindDOMNode from 'react-overlays/safeFindDOMNode';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nfunction Overlay({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}) {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset();\n  const actualTransition = transition === true ? Fade : transition || null;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: ref,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: ({\n      props: overlayProps,\n      arrowProps,\n      show,\n      update,\n      forceUpdate: _,\n      placement,\n      state,\n      ...props\n    }) => {\n      var _state$modifiersData$;\n\n      wrapRefs(overlayProps, arrowProps);\n      const popper = Object.assign(popperRef.current, {\n        state,\n        scheduleUpdate: update,\n        placement,\n        outOfBoundaries: (state == null ? void 0 : (_state$modifiersData$ = state.modifiersData.hide) == null ? void 0 : _state$modifiersData$.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...props,\n        ...overlayProps,\n        placement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...props,\n        ...overlayProps,\n        placement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n}\n\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","map":{"version":3,"sources":["D:/hihi/senior-project/web/node_modules/react-bootstrap/esm/Overlay.js"],"names":["React","useRef","classNames","BaseOverlay","safeFindDOMNode","useOverlayOffset","Fade","jsx","_jsx","defaultProps","transition","rootClose","show","placement","wrapRefs","props","arrowProps","ref","aRef","__wrapped","r","Overlay","children","overlay","popperConfig","outerProps","popperRef","modifiers","actualTransition","concat","overlayProps","update","forceUpdate","_","state","_state$modifiersData$","popper","Object","assign","current","scheduleUpdate","outOfBoundaries","modifiersData","hide","isReferenceHidden","className","cloneElement","style"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from 'react-overlays/Overlay';\nimport safeFindDOMNode from 'react-overlays/safeFindDOMNode';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nfunction Overlay({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}) {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset();\n  const actualTransition = transition === true ? Fade : transition || null;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: ref,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: ({\n      props: overlayProps,\n      arrowProps,\n      show,\n      update,\n      forceUpdate: _,\n      placement,\n      state,\n      ...props\n    }) => {\n      var _state$modifiersData$;\n\n      wrapRefs(overlayProps, arrowProps);\n      const popper = Object.assign(popperRef.current, {\n        state,\n        scheduleUpdate: update,\n        placement,\n        outOfBoundaries: (state == null ? void 0 : (_state$modifiersData$ = state.modifiersData.hide) == null ? void 0 : _state$modifiersData$.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...props,\n        ...overlayProps,\n        placement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...props,\n        ...overlayProps,\n        placement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n}\n\nOverlay.defaultProps = defaultProps;\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}