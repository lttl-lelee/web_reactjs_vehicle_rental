{"ast":null,"code":"var _jsxFileName = \"D:\\\\hihi\\\\senior-project\\\\Frontend\\\\src\\\\components\\\\Header\\\\VerifyForm.jsx\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport PropTypes from \"prop-types\"; // import { ErrorMessage, Field, Form, Formik } from \"formik\";\n\nimport Loading from \"components/layout/Loading\";\nimport React, { useState } from \"react\";\nimport { Button, Form as BForm } from \"react-bootstrap\";\nimport Timer from \"components/Timer\";\nimport UserApi from \"api/userApi\"; //@ts-ignore\n\nimport { store as noti } from \"react-notifications-component\";\nimport { NOTI } from \"constants/index\";\nimport store from \"app/store\";\nimport { verifySuccess } from \"app/slice/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VerifyForm(props) {\n  _s();\n\n  const handleClose = props.close;\n\n  const handleTimeOut = () => {\n    setTimeOut(true);\n  };\n\n  const [status, setStatus] = useState(\"idle\");\n  const [code, setCode] = useState(\"\");\n  const [timeOut, setTimeOut] = useState(false);\n\n  const handleReSend = () => {\n    setTimeOut(false);\n    UserApi.sendVerify().then(jwtCode => {\n      //@ts-ignore\n      sessionStorage.setItem(\"jwtCode\", jwtCode);\n    });\n  };\n\n  const handleSubmit = () => {\n    setStatus(\"loading\");\n\n    if (code === \"\") {\n      setStatus(\"null\");\n    }\n\n    const jwtCode = sessionStorage.getItem(\"jwtCode\");\n    UserApi.verify({\n      code,\n      jwtCode\n    }).then(() => {\n      store.dispatch(verifySuccess);\n      sessionStorage.removeItem(\"jwtCode\");\n      noti.addNotification({ ...NOTI,\n        message: \"Xác thực thành công\",\n        type: \"success\",\n        dismiss: {\n          duration: 3000\n        },\n        width: 160\n      });\n      handleClose();\n    }).catch(() => {\n      setStatus(\"wrong\");\n    });\n  };\n\n  const handleChange = evt => {\n    setCode(evt.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BForm, {\n      children: [/*#__PURE__*/_jsxDEV(BForm.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative text-danger text-center\",\n          children: status === \"loading\" ? /*#__PURE__*/_jsxDEV(Loading, {\n            type: \"inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : status === \"wrong\" ? \"Mã xác thực sai!\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BForm.Label, {\n          children: \"M\\xE3 x\\xE1c th\\u1EF1c*:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BForm.Control, {\n          type: \"text\",\n          placeholder: \"M\\xE3 \\u0111\\xE3 \\u0111\\u01B0\\u1EE3c g\\u1EEDi t\\u1EDBi email c\\u1EE7a b\\u1EA1n\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BForm.Text, {\n          className: \"text-danger\",\n          children: status === \"null\" ? \"Đây là trường bắt buộc\" : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary w-50\",\n          disabled: !timeOut,\n          onClick: handleReSend,\n          children: [\"G\\u1EEDi l\\u1EA1i m\\xE3\", \" \", !timeOut ? /*#__PURE__*/_jsxDEV(Timer, {\n            seconds: 60,\n            timeOut: handleTimeOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary w-50\",\n          onClick: handleSubmit,\n          children: \"X\\xE1c th\\u1EF1c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VerifyForm, \"EKi3jDl+o1d0vtbYdJkLpxW3Xxk=\");\n\n_c = VerifyForm;\nVerifyForm.propTypes = {\n  close: PropTypes.func.isRequired\n};\nexport default VerifyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyForm\");","map":{"version":3,"sources":["D:/hihi/senior-project/Frontend/src/components/Header/VerifyForm.jsx"],"names":["PropTypes","Loading","React","useState","Button","Form","BForm","Timer","UserApi","store","noti","NOTI","verifySuccess","VerifyForm","props","handleClose","close","handleTimeOut","setTimeOut","status","setStatus","code","setCode","timeOut","handleReSend","sendVerify","then","jwtCode","sessionStorage","setItem","handleSubmit","getItem","verify","dispatch","removeItem","addNotification","message","type","dismiss","duration","width","catch","handleChange","evt","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport PropTypes from \"prop-types\";\r\n// import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport Loading from \"components/layout/Loading\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form as BForm } from \"react-bootstrap\";\r\nimport Timer from \"components/Timer\";\r\nimport UserApi from \"api/userApi\";\r\n//@ts-ignore\r\nimport { store as noti } from \"react-notifications-component\";\r\nimport { NOTI } from \"constants/index\";\r\nimport store from \"app/store\";\r\nimport { verifySuccess } from \"app/slice/userSlice\";\r\n\r\nfunction VerifyForm(props) {\r\n  const handleClose = props.close;\r\n  const handleTimeOut = () => {\r\n    setTimeOut(true);\r\n  };\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [timeOut, setTimeOut] = useState(false);\r\n  const handleReSend = () => {\r\n    setTimeOut(false);\r\n    UserApi.sendVerify().then((jwtCode) => {\r\n      //@ts-ignore\r\n      sessionStorage.setItem(\"jwtCode\", jwtCode);\r\n    });\r\n  };\r\n  const handleSubmit = () => {\r\n    setStatus(\"loading\");\r\n    if (code === \"\") {\r\n      setStatus(\"null\");\r\n    }\r\n    const jwtCode = sessionStorage.getItem(\"jwtCode\");\r\n    UserApi.verify({ code, jwtCode })\r\n      .then(() => {\r\n        store.dispatch(verifySuccess);\r\n        sessionStorage.removeItem(\"jwtCode\");\r\n        noti.addNotification({\r\n          ...NOTI,\r\n          message: \"Xác thực thành công\",\r\n          type: \"success\",\r\n          dismiss: {\r\n            duration: 3000,\r\n          },\r\n          width: 160,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch(() => {\r\n        setStatus(\"wrong\");\r\n      });\r\n  };\r\n  const handleChange = (evt) => {\r\n    setCode(evt.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <BForm>\r\n        <BForm.Group className=\"mb-3\" controlId=\"email\">\r\n          <div className=\"position-relative text-danger text-center\">\r\n            {status === \"loading\" ? (\r\n              <Loading type=\"inline\" />\r\n            ) : status === \"wrong\" ? (\r\n              \"Mã xác thực sai!\"\r\n            ) : null}\r\n          </div>\r\n          <BForm.Label>Mã xác thực*:</BForm.Label>\r\n          <BForm.Control\r\n            type=\"text\"\r\n            placeholder=\"Mã đã được gửi tới email của bạn\"\r\n            onChange={handleChange}\r\n          />\r\n          <BForm.Text className=\"text-danger\">\r\n            {status === \"null\" ? \"Đây là trường bắt buộc\" : null}\r\n          </BForm.Text>\r\n        </BForm.Group>\r\n        <div className=\"d-flex gap-2\">\r\n          <Button\r\n            variant=\"outline-primary w-50\"\r\n            disabled={!timeOut}\r\n            onClick={handleReSend}\r\n          >\r\n            Gửi lại mã{\" \"}\r\n            {!timeOut ? <Timer seconds={60} timeOut={handleTimeOut} /> : null}\r\n          </Button>\r\n          <Button variant=\"primary w-50\" onClick={handleSubmit}>\r\n            Xác thực\r\n          </Button>\r\n        </div>\r\n      </BForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nVerifyForm.propTypes = {\r\n  close: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerifyForm;\r\n"]},"metadata":{},"sourceType":"module"}