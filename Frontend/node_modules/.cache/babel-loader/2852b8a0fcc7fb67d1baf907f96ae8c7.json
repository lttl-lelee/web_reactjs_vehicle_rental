{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst searchSlice = createSlice({\n  name: 'searched',\n  initialState: {\n    status: \"idle\",\n    data: JSON.parse(localStorage.getItem('searchInput')),\n    error: {}\n  },\n  reducers: {\n    search: (state, action) => {\n      state.data = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    },\n    changeEndDate: (state, action) => {\n      state.data.endDate = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    },\n    changeEndTime: (state, action) => {\n      state.data.endTime = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    },\n    changeStartDate: (state, action) => {\n      state.data.startDate = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    },\n    changeStartTime: (state, action) => {\n      state.data.startTime = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    },\n    changeTime: (state, action) => {\n      state.data.time = action.payload;\n      localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = searchSlice;\nexport const {\n  search,\n  changeEndDate,\n  changeEndTime,\n  changeStartDate,\n  changeStartTime,\n  changeTime\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["D:/hihi/senior-project/Frontend/src/app/slice/searchSlice.js"],"names":["createSlice","searchSlice","name","initialState","status","data","JSON","parse","localStorage","getItem","error","reducers","search","state","action","payload","setItem","stringify","changeEndDate","endDate","changeEndTime","endTime","changeStartDate","startDate","changeStartTime","startTime","changeTime","time","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,WAAW,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,UADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAxB;AAAyEC,IAAAA,KAAK,EAAE;AAAhF,GAFc;AAG5BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvBD,MAAAA,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAApB;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH,KAJK;AAKNa,IAAAA,aAAa,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACR,IAAN,CAAWc,OAAX,GAAqBL,MAAM,CAACC,OAA5B;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH,KARK;AASNe,IAAAA,aAAa,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACR,IAAN,CAAWgB,OAAX,GAAqBP,MAAM,CAACC,OAA5B;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH,KAZK;AAaNiB,IAAAA,eAAe,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACR,IAAN,CAAWkB,SAAX,GAAuBT,MAAM,CAACC,OAA9B;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH,KAhBK;AAiBNmB,IAAAA,eAAe,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACR,IAAN,CAAWoB,SAAX,GAAuBX,MAAM,CAACC,OAA9B;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH,KApBK;AAqBNqB,IAAAA,UAAU,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACR,IAAN,CAAWsB,IAAX,GAAkBb,MAAM,CAACC,OAAzB;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,KAAK,CAACR,IAArB,CAApC;AACH;AAxBK;AAHkB,CAAD,CAA/B;AA8BA,MAAM;AAAEuB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuB5B,WAA7B;AACA,OAAO,MAAM;AAAEW,EAAAA,MAAF;AAASM,EAAAA,aAAT;AAAuBE,EAAAA,aAAvB;AAAqCE,EAAAA,eAArC;AAAqDE,EAAAA,eAArD;AAAqEE,EAAAA;AAArE,IAAmFG,OAAzF;AACP,eAAeD,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst searchSlice = createSlice({\r\n    name: 'searched',\r\n    initialState: { status: \"idle\", data: JSON.parse(localStorage.getItem('searchInput')), error: {} },\r\n    reducers: {\r\n        search: (state, action) => {\r\n            state.data = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n        changeEndDate: (state, action) => {\r\n            state.data.endDate = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n        changeEndTime: (state, action) => {\r\n            state.data.endTime = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n        changeStartDate: (state, action) => {\r\n            state.data.startDate = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n        changeStartTime: (state, action) => {\r\n            state.data.startTime = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n        changeTime: (state, action) => {\r\n            state.data.time = action.payload;\r\n            localStorage.setItem(\"searchInput\", JSON.stringify(state.data));\r\n        },\r\n    },\r\n})\r\nconst { reducer, actions } = searchSlice;\r\nexport const { search,changeEndDate,changeEndTime,changeStartDate,changeStartTime,changeTime} = actions;\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}